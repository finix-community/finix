{ config, pkgs, lib, ... }:
let
  cfg = config.services.cron;

  # Vixie cron requires build-time configuration for the sendmail path.
  cron' = pkgs.cron.override {
    sendmailPath = "/run/wrappers/bin/sendmail";
  };
in
{
  imports = [
    ./providers.scheduler.nix
  ];

  options.services.cron = {
    enable = lib.mkOption {
      type = lib.types.bool;
      default = false;
      description = ''
        Whether to enable [cron](${pkgs.cron.meta.homepage}) as a system service.
      '';
    };

    systab = lib.mkOption {
      type = with lib.types; listOf nonEmptyStr;
      default = [ ];
      example = lib.literalExpression ''
        [ "* * * * *  test   ls -l / > /tmp/cronout 2>&1"
          "* * * * *  eelco  echo Hello World > /home/eelco/cronout"
        ]
      '';
    };
  };

  config = lib.mkIf cfg.enable {
    environment.etc.crontab = {
      mode = "0600";
      text = ''
        # generated by nix, do not edit
        SHELL=${pkgs.bash}/bin/bash
        PATH=${config.security.wrapperDir}:${lib.makeBinPath [ pkgs.coreutils ]}

        ${lib.concatStringsSep "\n" cfg.systab}
      '';
    };

    environment.systemPackages = [
      cron'
    ];

    services.tmpfiles.cron.rules = [
      "d /var/cron 0710"
      "d /var/spool 0755 - - -"
      "d /var/spool/cron 0755 - - -"
    ];

    security.wrappers.crontab = {
      setuid = true;
      owner = "root";
      group = "root";
      source = "${cron'}/bin/crontab";
    };

    finit.services.cron = {
      description = "cron daemon";
      conditions = "service/syslogd/ready";
      command = "${cron'}/bin/cron -n";
      notify = "pid";
    };

    # this module supplies an implementation for `providers.scheduler`
    providers.scheduler.backend = lib.mkDefault "cron";
  };
}
